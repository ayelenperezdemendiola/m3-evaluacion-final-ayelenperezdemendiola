{"version":3,"sources":["images/logo.png","services/fetchCharacters.js","components/Header.js","components/CharacterDetail.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","App.js","index.js"],"names":["module","exports","fetchCharacters","fetch","then","resp","json","Header","className","alt","src","Logo","CharacterDetail","props","routerProps","characters","id","match","params","characterId","parseInt","myCharacter","find","item","Fragment","to","name","image","species","origin","episode","length","status","Filters","handleChangeName","type","placeholder","onChange","CharacterCard","CharacterList","filterName","filter","toUpperCase","includes","map","key","Home","App","getCharacters","charactersData","setState","results","loading","event","currentName","currentTarget","value","state","this","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.854422c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","const ENDPOINT = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => {return(fetch (ENDPOINT).then (resp => resp.json ()))};\n\nexport {fetchCharacters};\n\n","import React from 'react';\nimport Logo from './../images/logo.png'\n\nconst Header = () => {\n    return (\n        <header className=\"app--header\">\n            <img alt=\"logo\" src={Logo} className=\"logo\" />\n            <h1 className=\"app--title\">Rick and Morty</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = (props) => {\n    const { routerProps, characters } = props;\n    const { id } = routerProps.match.params;\n    const characterId = parseInt(id);\n    const myCharacter = characters.find(item => item.id === parseInt(characterId));\n    return (\n        <React.Fragment>\n            <Header />\n            <div className=\"detail--general--container\">\n                {myCharacter ?\n                    <div className=\"detail--container\">\n                        <Link className=\"link--back\" to=\"/\"><p className=\"back--add\">{`< Volver`}</p></Link>\n                        <div className=\"detail--img__container\">\n                            <img alt={myCharacter.name} src={myCharacter.image} className=\"detail--img\" />\n                        </div>\n                        <div className=\"character--description\">\n                            <h2 className=\"detail--name\">{myCharacter.name}</h2>\n                            <ul className=\"detail--info\">\n                                <li className=\"info species\"> Especie: {myCharacter.species === 'Human' ? <i className=\"fas fa-user-circle\" /> : <i className=\"fab fa-reddit-alien\" />}</li>\n                                <li className=\"info planet\">{`Planeta: ${myCharacter.origin.name}`}</li>\n                                <li className=\"info episodes\">{`Cantidad de episodios: ${myCharacter.episode.length}`}</li>\n                                <li className=\"info life\"> Estado: {myCharacter.status === 'Alive' ? <i className=\"fas fa-heart\" /> : <i className=\"fas fa-dizzy\" />}</li>\n                            </ul>\n                        </div>\n                    </div>\n                    :\n                    <p className=\"add--notFound\">Lo sentimos, no encontramos tu personaje</p>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\nCharacterDetail.propTypes = {\n    characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\nexport default CharacterDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n    const { handleChangeName } = props;\n    return (\n        <div className=\"filter--container\">\n            {/* <label htmlFor=\"filterName\" className=\"filterName\">Buscar por nombre: </label> */}\n            <input type=\"text\" placeholder=\"Morty Smith\" className=\"filter--name\" name=\"filterName\" id=\"filterName\" onChange={handleChangeName} />\n        </div>\n    );\n}\nFilters.propTypes = {\n    handleChangeName: PropTypes.func.isRequired\n}\nexport default Filters;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n    const { name, image, species, id } = props;\n\n    return (\n        <Link to={`/character/${id}`} className=\"link--card\">\n            <div className=\"character__card\">\n                <div className=\"character__img--container\">\n                    <img className=\"character__img\" alt={name} src={image} />\n                </div>\n                <div className=\"character--description\">\n                    <h2 className=\"character__name\">{name}</h2>\n                    <p className=\"character__species\">{species}</p>\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nCharacterCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n}\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n    const { characters, filterName } = props;\n    return (\n        <ul className=\"characters--list\">\n            {characters\n                .filter(item => item.name.toUpperCase().includes(filterName.toUpperCase()))\n                .map(item => {\n                    return (\n                        <li className=\"character\" key={item.id}>\n                            < CharacterCard\n                                name={item.name}\n                                image={item.image}\n                                species={item.species}\n                                id={item.id}\n                            />\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n}\n\nCharacterList.propTypes = {\n    characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n    filterName: PropTypes.string.isRequired\n}\n\nexport default CharacterList;","import React from 'react';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nconst Home = (props) => {\n    const { handleChangeName, characters, filterName } = props;\n    return (\n        <React.Fragment>\n                <Header />\n            <main className=\"app--main\">\n                <Filters\n                    handleChangeName={handleChangeName}\n                />\n                <CharacterList\n                    characters={characters}\n                    filterName={filterName}\n                />\n            </main>\n        </React.Fragment>\n    )\n}\n\nHome.propTypes = {\n    handleChangeName: PropTypes.func.isRequired,\n    characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n    filterName: PropTypes.string.isRequired\n}\n\nexport default Home;","import React from 'react';\nimport { fetchCharacters } from './services/fetchCharacters';\nimport CharacterDetail from './components/CharacterDetail';\nimport Home from './components/Home';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      loading: true,\n      filterName: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters = () => {\n    fetchCharacters()\n      .then(charactersData => {\n        return (\n          this.setState({\n            characters: charactersData.results,\n            loading: false\n          })\n        );\n      })\n  }\n\n  handleChangeName = (event) => {\n    const currentName = event.currentTarget.value;\n    return (\n      this.setState({\n        filterName: currentName\n\n      })\n    );\n  }\n\n  render() {\n    const { characters, filterName, loading } = this.state;\n    return (\n      <div className=\"app\">\n        {loading && <p className=\"loading--add\">Cargando personajes</p>}\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                handleChangeName={this.handleChangeName}\n                characters={characters}\n                filterName={filterName}\n              />\n            );\n          }}\n          />\n          <Route path=\"/character/:id\" render={(routerProps)=>{return (\n            <CharacterDetail\n            routerProps={routerProps}\n            characters={characters}\n            />\n          );\n          }}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(<HashRouter> <App /> </HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}